{"componentChunkName":"component---src-templates-blog-post-js","path":"/2019/11/21/001343/","result":{"data":{"site":{"siteMetadata":{"title":"なにもわからない"}},"markdownRemark":{"id":"8cd34643-3a11-5bf1-bfcf-e866b7be7efd","excerpt":"こういった JSON の  の  だけを置換して全体を出力したい。 , , , ,  を駆使して実現できる。すごく雑に書くと  =>  のような配列を map() する  => 条件に一致するものだけフィルタする  =>  で  と評価される演算子  => イテレートしている要素 キモは 。 A filter of…","html":"<p>こういった JSON の <code class=\"language-text\">.name == &quot;Michel&quot;</code> の <code class=\"language-text\">.attributes</code> だけを置換して全体を出力したい。</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">/tmp\n$ cat test.json\n{\n  &quot;elements&quot;: [\n    {\n      &quot;name&quot;: &quot;John&quot;,\n      &quot;attributes&quot;: {\n        &quot;private&quot;: true,\n        &quot;last_login&quot;: &quot;2019-11-01 00:00:00&quot;\n      }\n    },\n    {\n      &quot;name&quot;: &quot;Michel&quot;,\n      &quot;attributes&quot;: {\n        &quot;private&quot;: false,\n        &quot;last_login&quot;: &quot;2019-11-02 00:00:00&quot;\n      }\n    },\n    {\n      &quot;name&quot;: &quot;Paul&quot;,\n      &quot;attributes&quot;: {\n        &quot;private&quot;: false,\n        &quot;last_login&quot;: &quot;2019-11-31 00:00:00&quot;\n      }\n    }\n  ]\n}</code></pre></div>\n<p><code class=\"language-text\">map()</code>, <code class=\"language-text\">select()</code>, <code class=\"language-text\">|=</code>, <code class=\"language-text\">//</code>, <code class=\"language-text\">.</code> を駆使して実現できる。すごく雑に書くと</p>\n<ul>\n<li><code class=\"language-text\">map()</code> => <code class=\"language-text\">.elements[]</code> のような配列を map() する</li>\n<li><code class=\"language-text\">select()</code> => 条件に一致するものだけフィルタする</li>\n<li><code class=\"language-text\">//</code> => <code class=\"language-text\">a // b</code> で <code class=\"language-text\">a ? a : b</code> と評価される演算子</li>\n<li><code class=\"language-text\">.</code> => イテレートしている要素</li>\n</ul>\n<p>キモは <code class=\"language-text\">//</code>。</p>\n<blockquote>\n<p>A filter of the form a // b produces the same results as a, if a produces results other than false and null. Otherwise, a // b produces the same results as b.</p>\n<p>This is useful for providing defaults: .foo // 1 will evaluate to 1 if there’s no .foo element in the input. It’s similar to how or is sometimes used in Python (jq’s or operator is reserved for strictly Boolean operations).</p>\n</blockquote>\n<p>[https://stedolan.github.io/jq/manual/#Alternativeoperator://:embed:cite]</p>\n<hr>\n<p>これらは以下の様に組み合わせて使う。</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\"># 条件にマッチしない場合 `.` (=`.attributes`) に置換する（≒何もしない）\n/tmp\n$ cat test.json | jq &#39;.elements |= map((select(0)) // .)&#39;\n{\n  &quot;elements&quot;: [\n    {\n      &quot;name&quot;: &quot;John&quot;,\n      &quot;attributes&quot;: {\n        &quot;private&quot;: true,\n        &quot;last_login&quot;: &quot;2019-11-01 00:00:00&quot;\n      }\n    },\n    {\n      &quot;name&quot;: &quot;Michel&quot;,\n      &quot;attributes&quot;: {\n        &quot;private&quot;: false,\n        &quot;last_login&quot;: &quot;2019-11-02 00:00:00&quot;\n      }\n    },\n    {\n      &quot;name&quot;: &quot;Paul&quot;,\n      &quot;attributes&quot;: {\n        &quot;private&quot;: false,\n        &quot;last_login&quot;: &quot;2019-11-31 00:00:00&quot;\n      }\n    }\n  ]\n}\n\n# 条件にマッチする場合 `elements[].attributes` を `[]` に置換する\n/tmp\n$ cat test.json | jq &#39;.elements |= map((select(1).attributes |= []) // .)&#39;\n{\n  &quot;elements&quot;: [\n    {\n      &quot;name&quot;: &quot;John&quot;,\n      &quot;attributes&quot;: []\n    },\n    {\n      &quot;name&quot;: &quot;Michel&quot;,\n      &quot;attributes&quot;: []\n    },\n    {\n      &quot;name&quot;: &quot;Paul&quot;,\n      &quot;attributes&quot;: []\n    }\n  ]\n}</code></pre></div>\n<p>そして特定条件時のみ <code class=\"language-text\">.attributes</code> を置換する</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">/tmp\n$ cat test.json | jq &#39;.elements |= map((select(.name == &quot;Michel&quot;).attributes |= { private: true, last_login: &quot;2222-22-22 22:22:22&quot;}) // .)&#39;\n{\n  &quot;elements&quot;: [\n    {\n      &quot;name&quot;: &quot;John&quot;,\n      &quot;attributes&quot;: {\n        &quot;private&quot;: true,\n        &quot;last_login&quot;: &quot;2019-11-01 00:00:00&quot;\n      }\n    },\n    {\n      &quot;name&quot;: &quot;Michel&quot;,\n      &quot;attributes&quot;: {\n        &quot;private&quot;: true,\n        &quot;last_login&quot;: &quot;2222-22-22 22:22:22&quot;\n      }\n    },\n    {\n      &quot;name&quot;: &quot;Paul&quot;,\n      &quot;attributes&quot;: {\n        &quot;private&quot;: false,\n        &quot;last_login&quot;: &quot;2019-11-31 00:00:00&quot;\n      }\n    }\n  ]\n}</code></pre></div>\n<p>202X年もシェル芸は身を助けてくれそうです</p>","frontmatter":{"title":"jq で特定条件にマッチする要素を置換する","date":"November 21, 2019","description":null}}},"pageContext":{"slug":"/2019/11/21/001343/","previous":{"fields":{"slug":"/2019/11/21/003524/"},"frontmatter":{"title":"Selenium IDE は for each したりできるよ"}},"next":{"fields":{"slug":"/docker-for-mac-nfs-for-symfony/"},"frontmatter":{"title":"Docker for Mac でも快適な Symfony 開発環境を作りたい"}}}}}